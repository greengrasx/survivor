name: "godot-ci export"
on: push

# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".

env:
  godot_version: 4.3
  export_name: survivor
  project_path: survivor

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${godot_version}.stable ~/.local/share/godot/export_templates/${godot_version}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          export_dir="$(readlink -f build)"
          godot --headless --verbose --export-pack "Windows Desktop" "$export_dir/windows/$export_name.pck"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows
  release:
    needs: export-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Execute GitVersion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Get branch name
        id: get_branch
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{env.GitVersion_MajorMinorPatch}}
          release_name: ${{env.GitVersion_MajorMinorPatch}}
          body: |
            Release notes for ${{env.GitVersion_MajorMinorPatch}}
          draft: false
          prerelease: true

      - name: Upload Windows Release Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: game_windows.zip
          asset_name: Godot_Game_Windows.zip
          asset_content_type: application/zip